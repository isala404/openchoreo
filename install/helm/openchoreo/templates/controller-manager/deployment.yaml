apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openchoreo-secure-core.fullname" . }}-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openchoreo-secure-core.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller-manager
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: controller-manager
      {{- include "openchoreo-secure-core.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller-manager
        {{- include "openchoreo-secure-core.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      serviceAccountName: {{ include "openchoreo-secure-core.controllerManager.serviceAccountName" . }}
      {{- if .Values.controllerManager.priorityClass.create }}
      priorityClassName: {{ .Values.controllerManager.priorityClass.name }}
      {{- end }}
      {{- with .Values.controllerManager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controllerManager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controllerManager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controllerManager.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
      containers:
      - name: manager
        image: "{{ .Values.controllerManager.image.repository }}:{{ .Values.controllerManager.image.tag }}"
        imagePullPolicy: {{ .Values.controllerManager.image.pullPolicy }}
        command:
        - /manager
        args:
        - --leader-elect
        - --metrics-bind-address=0.0.0.0:8080
        - --health-probe-bind-address=0.0.0.0:8081
        env:
        - name: ENABLE_WEBHOOKS
          value: "false"
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.controllerManager.resources | nindent 12 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true